---
- name: Setup Hadoop cluster base
  hosts: hadoop_nodes
  become: yes
  vars:
    hadoop_user: hadoop
    ssh_key_path: /home/hadoop/.ssh/id_rsa

  pre_tasks:
    - name: Include /etc/hosts update role
      ansible.builtin.import_role:
        name: update_hosts

    - name: Ensure hadoop user exists
      ansible.builtin.user:
        name: "{{ hadoop_user }}"
        shell: /bin/bash
        create_home: yes

    - name: Create .ssh directory
      ansible.builtin.file:
        path: "/home/{{ hadoop_user }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"

- name: Generate shared SSH keypair
  hosts: localhost
  vars:
    ssh_key_dir: tmp/ssh_hadoop
  tasks:
    - name: Create temporary dir
      ansible.builtin.file:
        path: "{{ ssh_key_dir }}"
        state: directory
        mode: '0700'

    - name: Generate SSH key pair
      ansible.builtin.openssh_keypair:
        path: "{{ ssh_key_dir }}/id_rsa"
        type: rsa
        size: 4096
        mode: '0600'
        comment: "hadoop@cluster"

- name: Distribute SSH keys
  hosts: hadoop_nodes
  become: yes
  vars:
    hadoop_user: hadoop
    ssh_key_path: /home/hadoop/.ssh/id_rsa
  tasks:
    - name: Copy private key
      ansible.builtin.copy:
        src: "tmp/ssh_hadoop/id_rsa"
        dest: "{{ ssh_key_path }}"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: '0600'

    - name: Copy public key to authorized_keys
      ansible.builtin.copy:
        src: "tmp/ssh_hadoop/id_rsa.pub"
        dest: "/home/{{ hadoop_user }}/.ssh/authorized_keys"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: '0600'

    - name: Clean up local key dir
      delegate_to: localhost
      ansible.builtin.file:
        path: "tmp/ssh_hadoop"
        state: absent

- name: Deploy Hadoop
  hosts: hadoop_nodes
  roles:
    - deploy_hadoop
